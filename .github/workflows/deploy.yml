name: Deploy to Hostinger

on:
  push:
    branches:
      - main  # ou master, dependendo do nome da sua branch principal
  workflow_dispatch:  # permite executar o workflow manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'  # habilita cache do npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          CI: false  # previne que warnings sejam tratados como erros

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, zip
          coverage: none

      - name: Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/  # apenas a pasta de build
          server-dir: ${{ secrets.SERVER_DIR }}  # diret√≥rio remoto na Hostinger
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            README.md
            package.json
            package-lock.json
            tsconfig.json
            vite.config.ts
            .env*
            src/**
            public/**

      - name: Notify deployment status
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Deploy ${{ job.status }} to Hostinger'
